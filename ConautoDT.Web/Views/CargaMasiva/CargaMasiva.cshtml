<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.css" />
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/bootstrap.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link rel="stylesheet" href="~/Content/bootstrap.css" />




<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css" />




@model VET_ANIMAL.WEB.Models.CargaMasivaViewModel
@{
    ViewData["Title"] = "CARGA MASIVA";
}

<div class="row" style="font-size: 13px !important;">
    <div class="col-md-12">
        <div class="widget" >
            <header class="widget-header" >
                <div class="row">
                    <h4 class="widget-title col-md-12" id="letrero"  >CARGA MASIVA</h4>
                </div>
            </header>
            <hr class="widget-separator" style="margin-top: 2px !important; border-color: #007bff;">
            <div class="widget-body" style="padding: 20px;">


                <div class="d-flex justify-content-end mb-2">

                   
                    <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                        <button title="Agregar Registros" class="btn btn-success btn-sm btn-editar mx-2" style="height: 40px;" data-bs-toggle="modal" data-bs-target="#masivo">
                            <i class="bi bi-arrow-bar-up"></i> REGISTROS CLIENTES
                        </button>

                        <button title="Entrenar Algoritmo" class="btn btn-info btn-sm btn-editar mx-2" style="height: 40px;" data-bs-toggle="modal" data-bs-target="#masivoTrain">
                            <i class="bi bi-clipboard-minus"></i> REGISTROS ENTRENAMIENTO
                        </button>
                    </div>
                </div>
                
                <div id="dashboard">

                    <div id="" style="background-color: #ffffff; padding: 15px; border: 1px solid #ced4da; border-radius: 5px; margin-bottom: 20px;">
                        <div class="row mt-5">

                            <div class="col-md-6 col-lg-6">
                                <div class="widget-small info coloured-icon">
                                    <i class="icon bi bi-person-workspace"></i>
                                    <div class="info">
                                        <h4>CLIENTES</h4>
                                        <p id="clientes"><b></b></p>

                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-md-6 col-lg-6">
                                <div class="widget-small danger coloured-icon">
                                    <i class="icon bi bi-github"></i>
                                    <div class="info">
                                        <h4>MASCOTAS </h4>
                                        <p id="mascotas"><b></b></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="mascotas" style="background-color: #ffffff; padding: 15px; border: 1px solid #ced4da; border-radius: 5px;">
                        
                        <div>
                            <h3 style="color: black;">Razas de mascotas</h3>
                            <canvas id="chartRazas" width="900" height="200"></canvas>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal cARAGA MASIVA-->
<div class="modal fade" id="masivo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lm">
        <div class="modal-content">
            <div class="modal-header TMSHeaderModal" style="background: #DAE8FD">
                <h5 class="modal-title" style="font-family: 'Young Serif', sans-serif; font-weight: bold;">SINCRONIZACIÓN CARGA MASIVA</h5>
                <div class="d-flex align-items-end flex-column">
                    <button type="button" style="color: black" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
            </div>

            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-8 offset-md-2">
                            <!-- Ajusta la alineación y el diseño de las columnas -->
                            <form asp-action="GuardaryEditarInfo">
                                <div class="form-group">
                                    <label for="nombreCliente">XSLM</label>
                                    <input type="file" style="color: blue;font-size: 14px;" id="excelCM" accept=".xls, .xlsx" class="form-control" placeholder="Ingrese nombres del cliente" />
                                </div>

                                <!-- Espacio adicional -->
                                <br />
                                <br />

                                <div class="modal-footer" style="background: #DAE8FD">
                                    <button id="guardarInformacion" type="button" onclick="uploadFile()" class="btn btn-success btn-grad btn-sm">
                                        Guardar
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Modal Entrenamiento MASIVA-->
<div class="modal fade" id="masivoTrain" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width: 600px;">
        <!-- Establecer un tamaño máximo -->
        <div class="modal-content" style="width:100%">
            <div class="modal-header TMSHeaderModal" style="background: #DAE8FD">
                <h5 class="modal-title" style="font-family: 'Young Serif', sans-serif; font-weight: bold;">SINCRONIZACIÓN CARGA MASIVA</h5>
                <div class="d-flex align-items-end flex-column">
                    <button type="button" style="color: black" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
            </div>
            <div class="col-md-4 float-left container-fluid h-custom" style="margin-top: 15%; margin-left: 5%; position:absolute">
            </div>


            <form asp-action="TrainModel" method="post" enctype="multipart/form-data">
                <div class="form-group col-md-12">
                    <label for="archivoEntrenamiento">Archivo de Entrenamiento</label>
                    <input type="file" style="color: blue; font-size: 14px;" id="archivoEntrenamiento" name="file" accept=".csv" class="form-control" />
                </div>

                <br />
                <br />

                <div class="modal-footer" style="background: #DAE8FD">
                    <button id="entrenarModelo" type="submit" class="btn btn-success btn-grad btn-sm">
                        Entrenar Modelo
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/Content/jquery-2.2.4.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
    <script src="~/Content/bootstrap.js"></script>
    <script src="~/Content/modernizr-2.8.3.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            // Hacer la llamada AJAX al método ObtenerNumeroClientesYNumeroMascotas
            $.ajax({
                url: "/CargaMasiva/ObtenerNumeroClientesYNumeroMascotas",
                type: "GET",
                success: function (data) {
                    console.log("data:", data);
                    // Actualizar el contenido del elemento #clientes con el número de clientes
                    $("#clientes").text(data[0]);
                    // Actualizar el contenido del elemento #mascotas con el número de mascotas
                    $("#mascotas").text(data[1]);
                },
                error: function () {
                    // Manejar errores si la llamada AJAX falla
                    $("#clientes").text("Error al cargar el número de clientes");
                    $("#mascotas").text("Error al cargar el número de mascotas");
                }
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Deja el array de razas vacío o con datos predeterminados
            var razas = [];
            var cantidades = [];

            // Colores de fondo para las barras
            var coloresBarras = [
                'rgba(255, 99, 132, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(75, 192, 192, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(255, 159, 64, 0.6)'
            ];


            // Crear un gráfico de barras para las razas de mascotas
            var ctxRazas = document.getElementById("chartRazas").getContext('2d');
            var chartRazas = new Chart(ctxRazas, {
                type: 'bar',
                data: {
                    labels: razas, // Usaremos este array para las razas
                    datasets: [{
                        label: 'Razas de mascotas',
                        data: cantidades, // Inicialmente vacío, lo actualizaremos más tarde
                        backgroundColor: coloresBarras,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Función para buscar las razas desde el servidor
            function buscarRazas() {
                $.ajax({
                    url: '/Razas/CantidadesRazas', // Ruta al método que devuelve la lista de razas
                    method: 'GET',
                    success: function (Content) {
                        // Manipula los datos recibidos aquí
                        console.log("Datos de las razas:", Content);

                        // Limpiar el array de razas y actualizarlo con los datos reales
                        razas = Content.map(function (raza) {
                            return raza.descripcionRaza;
                        });

                        // Limpiar el array de cantidades y actualizarlo con los datos reales
                        cantidades = Content.map(function (raza) {
                            return raza.cantidad;
                        });

                        // Actualizar las etiquetas del gráfico de barras
                        chartRazas.data.labels = razas;
                        chartRazas.data.datasets[0].data = cantidades;

                        // Actualizar el gráfico
                        chartRazas.update();
                    },
                    error: function (error) {
                        console.error('Error en la solicitud AJAX:', error);
                    }
                });
            }

            // Llamar a la función para buscar las razas cuando el DOM esté listo
            buscarRazas();
        });





        // // Esta función se ejecuta en el $(document).ready()
        // $(document).ready(function () {
        //     cantidadesRazas();
        // });

        // function cantidadesRazas() {
        //     $.ajax({
        //         url: '/Razas/CantidadesRazas', // Ruta al método que devuelve la lista de razas
        //         method: 'GET',
        //         success: function (data) {
        //             // Manipula los datos recibidos aquí
        //             console.log(" cantidades de las razas:", data);


        //         },
        //         error: function (error) {
        //             console.error('Error en la solicitud AJAX:', error);
        //         }
        //     });
        // }




        function uploadFile() {
            // Obtener el elemento de entrada de archivo
            const fileInput = document.getElementById('excelCM');
            // Obtener el archivo seleccionado
            const file = fileInput.files[0];

            // Verificar si se seleccionó un archivo
            if (file) {
                // Crear un objeto FormData y agregar el archivo
                const formData = new FormData();
                formData.append('Excel', file);

                // Configurar la solicitud Fetch
                fetch('Upload', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        // Verificar si la respuesta indica éxito (ajusta esto según tu lógica)
                        if (data.success) {
                            // Mostrar SweetAlert de éxito
                            Swal.fire({
                                title: 'Registro Exitoso',
                                text: 'El archivo se ha subido correctamente.',
                                icon: 'success',
                                confirmButtonText: 'Aceptar'
                            });
                        } else {
                            // Mostrar SweetAlert de error si es necesario
                            Swal.fire({
                                title: 'Error',
                                text: 'Hubo un problema al procesar el archivo.',
                                icon: 'error',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error al enviar el archivo:', error);
                        // Mostrar SweetAlert de error en caso de fallo
                        Swal.fire({
                            title: 'Error',
                            text: 'Hubo un problema al enviar el archivo.',
                            icon: 'error',
                            confirmButtonText: 'Aceptar'
                        });
                    });
            } else {
                alert('Por favor, selecciona un archivo antes de subirlo.');
            }
        }
        

        
        

        
       
    </script>



}
